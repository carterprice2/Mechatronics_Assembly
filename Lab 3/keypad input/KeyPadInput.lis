 0000           
 0000           ; Read number from keypad and display different messages based on number
 0000           
 0000           ; RAM area
                .area bss
                
 0000           NUM::   blkb 1
 0001           
 0001           
 0001           ;=================================================================================
                .area text
                
 0000           _main::		  
 0000           
 0000 160000                        jsr INITKEY                                         ;initialize keypad
 0003 160000                            jsr     KP_ACTIVE                                       ;turn on keypad
 0006                                   
 0006 160000                            jsr CLRSCREEN                                   ;clears LCD screen
 0009 160000                            jsr      INITLCD                                        ;initialize LCD
 000C 160000                            jsr      CURSOR                                         ;show cursor
 000F           
 000F                   ;SKIP:  tst        L$KEY_FLG                            ;test key available flag, loops until keypad entr
 000F                           ;       bne        SKIP
 000F                                   
 000F 00                                bgnd                                                    ;takes values 1-3
 0010 160000                            jsr        GETCHAR                                      ;the resulting ASCII character is placed in accumulator B 
 0013 7B0000                            stab   NUM                                              ;stores ASCII Character in NUM
 0016 00                                bgnd
 0017                                   
 0017 B60000                            ldaa   NUM                                              ;load acc a with NUM
 001A C630                              ldab   #$30                                             ;load acc with hex30 
 001C 1816                              sba                                                             ;stubtracts b from a, stores in a
 001E                                   
 001E 43                                deca                                                    ;subtract 1 from acc a
 001F 2708                              beq       DISPLAY1                                      ;if acc a is 0 then jsr Display 1
 0021 43                                deca  
 0022 270F                              beq       DISPLAY2
 0024 43                                deca
 0025 2716                              beq       DISPLAY3
 0027                                   
 0027                                   
 0027 20FE              SARA:   bra SARA
 0029           
 0029           ;=================================================================================
 0029           ; Subroutine display1
 0029           
 0029             DISPLAY1:
 0029 8600                               ldaa #$00                      ;load accumulator with LCD address
 002B CE0047                             ldx  #MESSAGE1         ;load register x with Message 1
 002E 160000                             jsr OUTSTRING
 0031 20F4                               bra SARA
 0033                                    
 0033           ;================================================================================                        
 0033           ;Subroutine 
 0033           
 0033           DISPLAY2:
 0033 8600                               ldaa #$00                      ;load accumulator with LCD address
 0035 CE0053                             ldx  #MESSAGE2         ;load register x with Message 1
 0038 160000                             jsr OUTSTRING
 003B 20EA                               bra SARA
 003D           ;================================================================================
 003D           ; subroutine display3
 003D                                    
 003D           DISPLAY3:
 003D 8600                               ldaa #$00                      ;load accumulator with LCD address
 003F CE005B                             ldx  #MESSAGE3         ;load register x with Message 1
 0042 160000                             jsr OUTSTRING
 0045 20E0                               bra SARA
 0047                                    
 0047           ;================================================================================
 0047                                    
 0047 68656C6C6F20776F726C64 MESSAGE1:   .ascii   'hello world'            ;message to be displayed
 0052 00                                 .byte    $00           
 0053                                    
 0053 77686174207570 MESSAGE2:   .ascii   'what up'                        ;message to be displayed
 005A 00                                 .byte    $00           
 005B                                    
 005B 6865792073617261 MESSAGE3:         .ascii   'hey sara'               ;message to be displayed
 0063 00                                 .byte    $00                    
 0064                                    
                .area interrupt_vectors (abs)
                          .org          $FFFE                                              ;at reset vector location,
 FFFE 0000                .word         __start                                            ;load starting address       
